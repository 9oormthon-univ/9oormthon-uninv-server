name: CI/CD Pipeline

on:
  push:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
  
    steps:
    # 1. Check out the repository
    - name: Check out the repository
      uses: actions/checkout@v3

    # 2. add .env
    - name: add .env
      run: |
        touch ./.env
        echo "${{ secrets.ENV }}" | base64 --decode > ./.env


    # 3. Log in to Docker Hub (ensure Docker credentials are set in repository secrets)
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # 4. Build Docker image
    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_IMAGE_NAME }} .

    # 5. Push Docker image to Docker Hub
    - name: Push Docker image
      run: docker push ${{ secrets.DOCKER_IMAGE_NAME }}

    # 6. Deploy Docker container (SSH to EC2)

    - name: Setup SSH Key
      run: |
        echo "${{ secrets.EC2_KEY_PAIR }}" > key.pem
        chmod 600 key.pem

    - name: Deploy Docker container
      run: |
        echo "${{ secrets.EC2_KEY_PAIR }}" > key.pem
        chmod 600 key.pem
        ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@${{ secrets.EC2_INSTANCE_IP }} << 'EOF'
          sudo docker pull ${{ secrets.DOCKER_IMAGE_NAME }}
          sudo docker stop ${{ secrets.DOCKER_CONTAINER_NAME }} || true
          sudo docker rm ${{ secrets.DOCKER_CONTAINER_NAME }} || true
          sudo docker run -d --name ${{ secrets.DOCKER_CONTAINER_NAME }} --network app-network -p 8080:8080 ${{ secrets.DOCKER_IMAGE_NAME }}
        EOF

    # 7. Clean up the KeyPair file
    - name: Clean up KeyPair
      run: rm key.pem
